{"version":3,"sources":["webpack:///./task-3.js"],"names":["makeTransaction","transaction","min","max","delay","Math","floor","random","time","Promise","resolve","reject","setTimeout","id","console","log","logSuccess","logError","warn","amount","then","catch"],"mappings":"2JAKQA,EAAkB,SAACC,GACvB,IAL+BC,EAAKC,EAK9BC,GALyBF,EAKS,IALJC,EAKS,IAJtCE,KAAKC,MAAMD,KAAKE,UAAYJ,EAAMD,EAAM,GAAKA,IAK9CM,EAAOJ,EAuBb,OAtBgB,IAAIK,SAAS,SAACC,EAASC,GACnCC,YAAW,WACYP,KAAKE,SAAW,GAGjCG,EAAO,WAAP,EAAW,CAACT,EAAYY,GAAIL,IAI1BG,EAAOV,EAAYY,MAExBT,GAGFU,QAAQC,IAAIP,OAWbQ,EAAa,SAACH,EAAIL,GACtBM,QAAQC,IAAR,eAA2BF,EAA3B,iBAA8CL,EAA9C,QAEIS,EAAW,SAAAJ,GACfC,QAAQI,KAAR,gCAA6CL,EAA7C,8BAMFb,EAAgB,CAAEa,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETjB,EAAgB,CAAEa,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETjB,EAAgB,CAAEa,GAAI,GAAIM,OAAQ,KAC/BC,KAAKJ,GACLK,MAAMJ,GAETjB,EAAgB,CAAEa,GAAI,GAAIM,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,K","file":"main.78c0cf3d7f17cb836bee.js","sourcesContent":["\r\nconst randomIntegerFromInterval = (min, max) => {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n  };\r\n\r\n  const makeTransaction = (transaction) => {\r\n    const delay = randomIntegerFromInterval(200, 500); \r\n    const time = delay;   \r\n    const promise = new Promise ((resolve, reject) =>{\r\n        setTimeout(() => {       \r\n            const canProcess = Math.random() > 0.3;        \r\n                \r\n            if (canProcess) {               \r\n              resolve(...[transaction.id, time]);\r\n                // {id: transaction.id, \r\n                // time: delay});\r\n            } else {            \r\n                reject(transaction.id);\r\n            }     \r\n        }, delay);\r\n\r\n        \r\n         console.log(time);\r\n    });\r\n    \r\n    // promise.then(transaction.id); \r\n    //     promise.then(delay); \r\n    //     promise.catch(transaction.id);\r\n// console.log(transaction);\r\n    // console.log(promise.then ());\r\n    return promise;\r\n  };\r\n  \r\n  const logSuccess = (id, time) => {\r\n    console.log(`Transaction ${id} processed in ${time} ms`);\r\n  };  \r\n  const logError = id => {\r\n    console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n  };  \r\n \r\n  /*\r\n   * Должно работать так\r\n   */\r\n  makeTransaction({ id: 70, amount: 150 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 71, amount: 230 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 72, amount: 75 })\r\n    .then(logSuccess)\r\n    .catch(logError);\r\n  \r\n  makeTransaction({ id: 73, amount: 100 })\r\n    .then(logSuccess)\r\n    .catch(logError); "],"sourceRoot":""}